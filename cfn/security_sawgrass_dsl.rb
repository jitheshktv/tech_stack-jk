CloudFormation {
  securityVpcId ||= 'notset'
  env ||= 'dev'

  Description "Placeholder security groups for Sawgrass Tech Stack - environment #{env}"

  EC2_SecurityGroup('SawgrassWEBELBSG') {
    GroupDescription 'Allow TCP 10000'
    VpcId securityVpcId

    ingress_cidrs = %w(10.0.0.0/8 165.203.0.0/16 172.25.0.0/16 153.40.0.0/16 168.72.0.0/16 169.173.0.0/16 169.177.0.0/16 172.26.0.0/16 199.67.140.0/24 172.23.0.0/16 172.24.0.0/16)
    ingress_rules = ingress_cidrs.map do |ingress_cidr|
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => ingress_cidr,
        'FromPort' => 10000,
        'ToPort' => 10020
      }
    end
    Property('SecurityGroupIngress', ingress_rules)

    Tags [
      { Key: 'Name', Value: 'Sawgrass-WEB-ELBSG'}
    ]
  }

  EC2_SecurityGroup('SawgrassallowallwithinVPCSG') {
    GroupDescription 'Allow TCP 10000'
    VpcId securityVpcId

    ingress_cidrs = %w(10.119.0.0/16)
    ingress_rules = ingress_cidrs.map do |ingress_cidr|
      {
        'IpProtocol' => -1,
        'CidrIp' => ingress_cidr
      }
    end
    Property('SecurityGroupIngress', ingress_rules)


    Tags [
      { Key: 'Name', Value: 'Sawgrass-allow-all-within-VPC-SG'}
    ]
  }

  EC2_SecurityGroup('SawgrassBASELinuxManagementSG') {
    GroupDescription 'Linux Management security group'
    VpcId securityVpcId

    ingress_cidrs = %w(10.0.0.0/8 165.203.0.0/16 172.25.0.0/16 153.40.0.0/16 168.72.0.0/16 169.173.0.0/16 169.177.0.0/16 172.26.0.0/16 199.67.140.0/24 172.23.0.0/16 172.24.0.0/16)
    ingress_rules = ingress_cidrs.map do |ingress_cidr|
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => ingress_cidr,
        'FromPort' => 22,
        'ToPort' => 22
      }
    end
    Property('SecurityGroupIngress', ingress_rules)

    Tags [
      { Key: 'Name', Value: 'LAB:Sawgrass:BASELinuxManagementSG'},
      { Key: 'Network', Value: 'Private'}
    ]
  }

  EC2_SecurityGroup('JkTibcoDomain') {
    GroupDescription 'Security Group for TIBCO Domain and Hawkagents'
    VpcId securityVpcId

    Property('SecurityGroupIngress', [
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => 10010,
        'ToPort' => 10010
      },
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => '10.119.16.0/24',
        'FromPort' => 7222,
        'ToPort' => 65535
      }
    ])

    Tags [
      { Key: 'Name', Value: 'JK_TIBCO_DOMAIN'}
    ]
  }

  EC2_SecurityGroup('JkTibcoEms') {
    GroupDescription 'Security Group for TIBCO EMS'
    VpcId securityVpcId

    Property('SecurityGroupIngress', [
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => 7222,
        'ToPort' => 65535
      }
    ])

    Tags [
      { Key: 'Name', Value: 'JK_TIBCO_EMS'}
    ]
  }

  EC2_SecurityGroup('JkSoftNas') {
    GroupDescription 'This security group was generated by AWS Marketplace and is based upon recommened settings for SoftNAS Cloud Express - Cloud NAS (HVM/SRB-IPO/1TB) version SoftNAS Cloud 3.4.6 provided by SoftNAS (not really!)'
    VpcId securityVpcId

    Property('SecurityGroupIngress', [
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => 2010,
        'ToPort' => 2014
      },
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => '10.119.16.0/24',
        'FromPort' => 0,
        'ToPort' => 65535
      },
      {
        'IpProtocol' => 'udp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => 2049,
        'ToPort' => 2049
      },
      {
        'IpProtocol' => 'udp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => 2010,
        'ToPort' => 2014
      },
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => 111,
        'ToPort' => 111
      },
      {
        'IpProtocol' => 'udp',
        'CidrIp' => '10.119.16.0/24',
        'FromPort' => 0,
        'ToPort' => 65535
      },
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => 443,
        'ToPort' => 443
      },
      {
        'IpProtocol' => 'icmp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => -1,
        'ToPort' => -1
      },
      {
        'IpProtocol' => 'udp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => 111,
        'ToPort' => 111
      },
      {
        'IpProtocol' => 'tcp',
        'CidrIp' => '0.0.0.0/0',
        'FromPort' => 2049,
        'ToPort' => 2049
      }
    ])

    Tags [
      { Key: 'Name', Value: 'JK_SoftNas'}
    ]
  }

  Output 'sawgrassWebElbSecurityGroupId',
         Ref('SawgrassWEBELBSG')
  Output 'sawgrassAllowAllWithinVpcSecurityGroupId',
         Ref('SawgrassallowallwithinVPCSG')
  Output 'sawgrassBaseLinuxManagementSecurityGroupId',
         Ref('SawgrassBASELinuxManagementSG')
  Output 'jkTibcoEmsSecurityGroupId',
         Ref('JkTibcoEms')
  Output 'jkTibcoDomainSecurityGroupId',
         Ref('JkTibcoDomain')
  Output 'jkSoftNasSecurityGroupId',
         Ref('JkSoftNas')

}
